package xpath;

import xpath.parser.FunctionCallParserTest;
import xpath.xml.XPathXmlTest;
import xpath.xml.XPathHxXmlTest;
import xpath.value.XPathStringTest;
import xpath.value.XPathNumberTest;
import xpath.value.XPathNodeSetTest;
import xpath.value.XPathBooleanTest;
import xpath.tokenizer.token.EndPredicateTokenizerTest;
import xpath.tokenizer.token.LiteralTokenizerTest;
import xpath.tokenizer.token.NameTestTokenizerTest;
import xpath.tokenizer.token.NumberTokenizerTest;
import xpath.tokenizer.token.OperatorTokenizerTest;
import xpath.tokenizer.token.PINameTestTokenizerTest;
import xpath.tokenizer.token.StepDelimiterTokenizerTest;
import xpath.tokenizer.token.TokenTokenizerTest;
import xpath.tokenizer.token.TypeTestTokenizerTest;
import xpath.tokenizer.token.VariableReferenceTokenizerTest;
import xpath.tokenizer.util.DisjunctionTest;
import xpath.tokenizer.util.OptionalTest;
import xpath.tokenizer.util.RepetitionTest;
import xpath.tokenizer.util.SequenceTest;
import xpath.tokenizer.TokenizerExceptionTest;
import xpath.tokenizer.TokenizerInputTest;
import xpath.tokenizer.TokenizerOutputTest;
import xpath.tokenizer.TokenizerErrorTest;
import xpath.tokenizer.ExpectedExceptionTest;
import xpath.tokenizer.token.NegationOperatorTokenizerTest;
import xpath.tokenizer.token.FixedStringTokenizerTest;
import xpath.tokenizer.token.EndXPathTokenizerTest;
import xpath.tokenizer.token.EndPathTokenizerTest;
import xpath.tokenizer.token.EndGroupTokenizerTest;
import xpath.tokenizer.token.EndFunctionCallTokenizerTest;
import xpath.tokenizer.token.EndExpressionTokenizerTest;
import xpath.tokenizer.token.DeepStepDelimiterTokenizerTest;
import xpath.library.StringLibraryTest;
import xpath.parser.PathParserTest;
import xpath.tokenizer.token.BeginGroupTokenizerTest;
import xpath.tokenizer.token.BeginPathTokenizerTest;
import xpath.tokenizer.token.BeginXPathTokenizerTest;
import xpath.tokenizer.token.BeginPredicateTokenizerTest;
import xpath.tokenizer.token.BeginFunctionCallTokenizerTest;
import xpath.tokenizer.token.BeginExpressionTokenizerTest;
import xpath.tokenizer.token.AxisTokenizerTest;
import xpath.tokenizer.token.ArgumentDelimiterTokenizerTest;
import xpath.tokenizer.token.AbbreviatedStepTokenizerTest;
import xpath.tokenizer.container.OperandTokenizerTest;
import xpath.tokenizer.container.NodeTestTokenizerTest;
import xpath.tokenizer.container.GroupTokenizerTest;
import xpath.tokenizer.container.FunctionCallTokenizerTest;
import xpath.tokenizer.container.FunctionArgumentsTokenizerTest;
import xpath.tokenizer.container.FilterOperandTokenizerTest;
import xpath.tokenizer.container.FilterExpressionTokenizerTest;
import xpath.tokenizer.container.ExpressionTokenizerTest;
import xpath.parser.ExpressionParserTest;
import xpath.library.NumberLibraryTest;
import xpath.library.NodeSetLibraryTest;
import xpath.library.BooleanLibraryTest;
import xpath.expression.VariableReferenceTest;
import xpath.expression.TypeStepTest;
import xpath.expression.RootStepTest;
import xpath.expression.PredicateStepTest;
import xpath.expression.PathStepTest;
import xpath.expression.NumberTest;
import xpath.expression.NegationTest;
import xpath.expression.NameStepTest;
import xpath.expression.LiteralTest;
import xpath.expression.FunctionCallTest;
import xpath.expression.FilterStepTest;
import xpath.expression.AxisStepTest;
import xpath.context.DynamicEnvironmentTest;
import xpath.context.ContextTest;
import xpath.context.BaseEnvironmentTest;
import haxe.unit.TestRunner;

class Test {
    public static function main() {
        var runner = new TestRunner();

        // runner.add(new BaseEnvironmentTest());
        // runner.add(new ContextTest());
        // runner.add(new DynamicEnvironmentTest());
        // runner.add(new AxisStepTest());
        // runner.add(new FilterStepTest());
        // runner.add(new FunctionCallTest());
        // runner.add(new LiteralTest());
        // runner.add(new NameStepTest());
        // runner.add(new NegationTest());
        // runner.add(new NumberTest());
        // runner.add(new PathStepTest());
        // runner.add(new PredicateStepTest());
        // runner.add(new RootStepTest());
        // runner.add(new TypeStepTest());
        // runner.add(new VariableReferenceTest());
        // runner.add(new BooleanLibraryTest());
        // runner.add(new NodeSetLibraryTest());
        // runner.add(new NumberLibraryTest());
        // runner.add(new StringLibraryTest());
        // runner.add(new ExpressionParserTest());
        // runner.add(new FunctionCallParserTest());
        // runner.add(new PathParserTest());
        // runner.add(new ExpressionTokenizerTest());
        // runner.add(new FilterExpressionTokenizerTest());
        // runner.add(new FilterOperandTokenizerTest());
        // runner.add(new FunctionArgumentsTokenizerTest());
        // runner.add(new FunctionCallTokenizerTest());
        // runner.add(new GroupTokenizerTest());
        // runner.add(new NodeTestTokenizerTest());
        // runner.add(new OperandTokenizerTest());
        // runner.add(new AbbreviatedStepTokenizerTest());
        // runner.add(new ArgumentDelimiterTokenizerTest());
        // runner.add(new AxisTokenizerTest());
        // runner.add(new BeginExpressionTokenizerTest());
        // runner.add(new BeginFunctionCallTokenizerTest());
        // runner.add(new BeginGroupTokenizerTest());
        // runner.add(new BeginPathTokenizerTest());
        // runner.add(new BeginPredicateTokenizerTest());
        // runner.add(new BeginXPathTokenizerTest());
        // runner.add(new DeepStepDelimiterTokenizerTest());
        // runner.add(new EndExpressionTokenizerTest());
        // runner.add(new EndFunctionCallTokenizerTest());
        // runner.add(new EndGroupTokenizerTest());
        // runner.add(new EndPathTokenizerTest());
        // runner.add(new EndPredicateTokenizerTest());
        // runner.add(new EndXPathTokenizerTest());
        // runner.add(new FixedStringTokenizerTest());
        // runner.add(new LiteralTokenizerTest());
        // runner.add(new NameTestTokenizerTest());
        // runner.add(new NegationOperatorTokenizerTest());
        // runner.add(new NumberTokenizerTest());
        // runner.add(new OperatorTokenizerTest());
        // runner.add(new PINameTestTokenizerTest());
        // runner.add(new StepDelimiterTokenizerTest());
        // runner.add(new TokenTokenizerTest());
        // runner.add(new TypeTestTokenizerTest());
        // runner.add(new VariableReferenceTokenizerTest());
        // runner.add(new DisjunctionTest());
        // runner.add(new OptionalTest());
        // runner.add(new RepetitionTest());
        // runner.add(new SequenceTest());
        // runner.add(new ExpectedExceptionTest());
        // runner.add(new TokenizerErrorTest());
        // runner.add(new TokenizerExceptionTest());
        // runner.add(new TokenizerInputTest());
        // runner.add(new TokenizerOutputTest());
        // runner.add(new XPathBooleanTest());
        // runner.add(new XPathNodeSetTest());
        // runner.add(new XPathNumberTest());
        // runner.add(new XPathStringTest());
        // runner.add(new XPathHxXmlTest());
        // runner.add(new XPathXmlTest());
        // runner.add(new XPathHxTest());
        runner.add(new XPathTest());

#if sys
        if (runner.run()) {
            Sys.exit(0);
        } else {
            Sys.exit(1);
        }
#else
        runner.run();
#end
    }
}
